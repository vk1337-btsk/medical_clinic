version: "3.10"

services:

  postgres-db:
    image: postgres:16.2
    restart: always
    env_file:
      - .env.docker
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - medical-clinic-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  medical-clinic-drf:
    env_file:
      - .env.docker
    tty: true
    environment:
      ENVIRONMENT: "docker"
    build:
      context: ./backend
    volumes:
      - ./backend:/app/backend
      - ./backend/static_volume:/app/backend/static
      - ./backend/media_volume:/app/backend/media
    ports:
      - "8000:8000"
    networks:
      - medical-clinic-network
    depends_on:
      - postgres-db
      - redis
      - celery
      - celery-beat
    restart: on-failure:5
    healthcheck:
      test: curl -f http://localhost:8000/api/catalog/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    env_file:
      - .env.docker
    environment:
      ENVIRONMENT: "docker"
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - medical-clinic-network

  celery:
    env_file:
      - .env.docker
    environment:
      ENVIRONMENT: "docker"
    build:
      context: ./backend/
    command: sh -c "celery -A config worker -l INFO"
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - postgres-db
    networks:
      - medical-clinic-network

  celery-beat:
    env_file:
      - .env.docker
    build:
      context: ./backend
    command: sh -c "celery -A config worker -l INFO"
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - postgres-db
      - celery
    networks:
      - medical-clinic-network

  nginx:
    env_file:
      - .env.docker
    environment:
      ENVIRONMENT: "docker"
    image: nginx:latest
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
    ports:
      - "80:80"
    networks:
      - medical-clinic-network
    depends_on:
      - medical-clinic-react
      - medical-clinic-drf
    profiles:
      - react

  medical-clinic-react:
    env_file: .env.docker
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    networks:
      - medical-clinic-network
    profiles:
      - react

volumes:
  postgres_data:
  static_volume:
  media_volume:


networks:
  medical-clinic-network:
    driver: bridge
